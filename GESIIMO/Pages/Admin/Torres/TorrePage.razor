@page "/torres/{IdConjunto:int}"

@using GESIIMO.Model
@using GESIIMO.Services

@inject ITorreService torreService
@inject NavigationManager navigationManager

@if (torres == null)
{
    <div class="spinner"></div>
}
else
{
    <MudText GutterBottom="true" Typo="Typo.subtitle1">Listado de Torres</MudText>
    <MudDivider />

    if (!torres.Any())
    {
        <div class="row col pb-3">
            <RadzenButton Icon="add_circle_outline" Text="Agregar" Click="@AddTorre" />
        </div>

        <p><em>No se encontraron resultados.</em></p>
    }
    else
    {
        <div class="row col">
            <RadzenGrid PagerPosition="PagerPosition.Bottom" Data="@torres" TItem="Torre"
                        AllowFiltering="true" AllowPaging="true" PageSize="10" AllowSorting="true" AllowColumnResize="true"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple"
                        LogicalFilterOperator="LogicalFilterOperator.Or" ColumnWidth="200px">
                <Columns>
                    <RadzenGridColumn TItem="Torre" Context="data" Bubble="false" Filterable="false"
                                      Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                        <HeaderTemplate>
                            <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="add_business" Size="ButtonSize.Medium"
                                          Click="@(() => AddTorre())" />
                        </HeaderTemplate>
                        <Template Context="data">
                            <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="edit" Size="ButtonSize.Medium"
                                          Click="@(args => EditTorre(data.IdTorre))" />
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Torre" Context="data" Bubble="false" Filterable="false"
                                      Sortable="false" TextAlign="TextAlign.Center" Width="70px" Title="# Apartamentos">
                        <Template Context="data">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="weekend" Size="ButtonSize.Medium"
                                          Click="@(() => AddApartamento(data.IdTorre))" />
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Torre" Property="Descripcion" Title="Descripcion" />
                    <RadzenGridColumn TItem="Torre" Title="Estado">
                        <Template Context="data">
                            <RadzenSwitch @bind-Value="@data.Estado" />
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </div>
    }

    <TorreForm @ref="torreForm" IdConjunto="@IdConjunto" OnSaved="@OnSaved" OnCancel="@OnCancel" />
}

@code {
    [Parameter] public int IdConjunto { get; set; }

    private IEnumerable<Torre> torres;
    private TorreForm torreForm;

    protected override async Task OnInitializedAsync()
    {
        await UpdateGrid();
    }

    private async Task UpdateGrid()
    {
        torres = await torreService.GetTorres(IdConjunto);
    }

    #region Eventos Grid

    private async Task AddTorre()
    {
        await torreForm.Show(0);
    }

    private async Task EditTorre(int idTorre)
    {
        await torreForm.Show(idTorre);
    }

    private void AddApartamento(int idTorre)
    {
        navigationManager.NavigateTo($"apartamentos/{idTorre}");
    }

    #endregion

    #region Eventos Form

    private async Task OnSaved()
    {
        await UpdateGrid();
    }

    private void OnCancel()
    {
        torreForm.Hide();
    }

    #endregion
}